{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["theme","global","font","family","Flashcard","props","state","flipped","this","setState","className","Card","border","margin","background","width","height","min","CardBody","pad","onClick","handleFlip","editing","TextArea","autoFocus","fill","resize","value","front","e","stopPropagation","onKeyDown","onChange","onChangeFront","elevation","back","onChangeBack","footer","React","Component","Toast","show","timeout","clearTimeout","setTimeout","hide","Layer","position","plain","modal","direction","gap","align","text","Box","action","App","cards","id","uuidv4","progress","category","boxTitle","notifications","selectedCategories","Set","selectedTags","fileSave","Blob","JSON","stringify","getSaveState","type","fileName","filenamify","replacement","extensions","fileOpen","mimeTypes","blob","reader","FileReader","addEventListener","result","parse","readAsText","tagsMap","card","tagRE","cardFrontTags","match","cardBackTags","cardTags","concat","length","cardTag","push","Object","entries","map","tag","selectedTagsCardsUnion","getTags","tagInfo","has","c","add","filter","t","filterCards","cardIndex","findIndex","notify","Text","Button","label","slice","target","card_progress","notification","addNotification","CATEGORY_COLORMAP","Grommet","full","flex","Header","horizontal","vertical","Heading","level","handleOpen","TextInput","handleSave","primary","handleAdd","grow","shrink","overflow","wrap","justify","key","handleChangeFront","handleChangeBack","CardFooter","icon","Checkmark","Edit","hoverIndicator","handleEdit","d","RadialSelected","color","Radial","handleSetCategory","Trash","handleDelete","n","Footer","Stack","anchor","areAllCardsSelected","showNone","showAll","round","s","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"2gBAUMA,EAAQ,CACZC,OAAQ,CACNC,KAAM,CACJC,OAAQ,aAKRC,E,kDAEJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,SAAS,GAHM,E,yDAQjBC,KAAKC,SAAS,CACZF,SAAUC,KAAKF,MAAMC,Y,+BAIf,IAAD,OACP,OACE,6BACA,yBAAKG,UAAW,cAAgBF,KAAKF,MAAMC,QAAU,UAAY,KAC/D,yBAAKG,UAAU,QACb,yBAAKA,UAAU,SACb,kBAACC,EAAA,EAAD,CAAMC,OAAQJ,KAAKH,MAAMO,OAAQC,OAAO,QAAQC,WAAW,UAAUC,MAAM,SAASC,OAAQ,CAAEC,IAAK,UACjG,kBAACC,EAAA,EAAD,CAAUC,IAAI,SAASC,QAAS,kBAAM,EAAKC,eACvCb,KAAKH,MAAMiB,QAAU,kBAACC,EAAA,EAAD,CACnBC,WAAYhB,KAAKF,MAAMC,QACvBkB,MAAI,EACJC,OAAO,WACPC,MAAOnB,KAAKH,MAAMuB,MAClBR,QAAS,SAACS,GAAD,OAAOA,EAAEC,mBAClBC,UAAW,SAACF,GAAD,OAAOA,EAAEC,mBACpBE,SAAU,SAACH,GAAD,OAAO,EAAKxB,MAAM4B,cAAcJ,MACvCrB,KAAKH,MAAMuB,SAKxB,yBAAKlB,UAAU,QACb,kBAACC,EAAA,EAAD,CAAMC,OAAQJ,KAAKH,MAAMO,OAAQC,OAAO,QAAQC,WAAW,UAAUoB,UAAU,QAAQnB,MAAM,SAASC,OAAQ,CAAEC,IAAK,UACnH,kBAACC,EAAA,EAAD,CAAUC,IAAI,SAASC,QAAS,kBAAM,EAAKC,eACvCb,KAAKH,MAAMiB,QAAU,kBAACC,EAAA,EAAD,CACnBC,UAAWhB,KAAKF,MAAMC,QACtBkB,MAAI,EACJC,OAAO,WACPC,MAAOnB,KAAKH,MAAM8B,KAClBf,QAAS,SAACS,GAAD,OAAOA,EAAEC,mBAClBC,UAAW,SAACF,GAAD,OAAOA,EAAEC,mBACpBE,SAAU,SAACH,GAAD,OAAO,EAAKxB,MAAM+B,aAAaP,MACtCrB,KAAKH,MAAM8B,MAGnB3B,KAAKH,MAAMgC,gB,GAlDFC,IAAMC,WA6DxBC,E,kDACJ,WAAYnC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXmC,MAAM,EACNC,QAAS,MAJM,E,mDASU,OAAvBlC,KAAKF,MAAMoC,SACbC,aAAanC,KAAKF,MAAMoC,SAG1BlC,KAAKC,SAAS,CACZgC,MAAM,EACNC,QAAS,S,0CAIQ,IAAD,OACS,OAAvBlC,KAAKF,MAAMoC,SACblC,KAAKC,SAAS,CACZiC,QAASE,YAAW,kBAAM,EAAKC,SAAQ,S,+BAKnC,IAAD,OACP,OAAOrC,KAAKF,MAAMmC,MAChB,kBAACK,EAAA,EAAD,CAAOC,SAAS,cAAclC,OAAO,QAAQmC,OAAK,EAACC,OAAO,GACxD,kBAACtC,EAAA,EAAD,CAAMuC,UAAU,MAAM/B,IAAI,SAASgC,IAAI,QAAQC,MAAM,WAAWtC,WAAW,SAASoB,UAAU,SAC3F1B,KAAKH,MAAMgD,KACZ,kBAACC,EAAA,EAAD,CAAKlC,QAAS,kBAAM,EAAKyB,SACtBrC,KAAKH,MAAMkD,c,GAlCJjB,IAAMC,WAkXXiB,E,kDAtUb,WAAYnD,GAAQ,IAAD,sBACjB,cAAMA,GACN,IAAMoD,EAAQ,CACZ,CACEC,GAAIC,cACJ/B,MAAO,OACPO,KAAM,oBACNb,SAAS,EACTsC,SAAU,CACRC,SAAU,SAGd,CACEH,GAAIC,cACJ/B,MAAO,uEACPO,KAAM,mBACNb,SAAS,EACTsC,SAAU,CACRC,SAAU,WAGd,CACEH,GAAIC,cACJ/B,MAAO,6EACPO,KAAM,2GACNb,SAAS,EACTsC,SAAU,CACRC,SAAU,UA3BC,OAgCjB,EAAKvD,MAAQ,CACXwD,SAAU,QACVL,MAAOA,EACPM,cAAe,GACfC,mBAAoB,IAAIC,IAAI,CAC1B,OAAQ,SAAU,SAEpBC,aAAc,IAAID,IAAI,CACpB,WAAY,WAxCC,E,2DA8CjB,MAAQ,CACNH,SAAUtD,KAAKF,MAAMwD,SACrBL,MAAOjD,KAAKF,MAAMmD,MAClBO,mBAAmB,YAAKxD,KAAKF,MAAM0D,oBACnCE,aAAa,YAAK1D,KAAKF,MAAM4D,iB,mCAK/BC,YAAS,IAAIC,KAAK,CAACC,KAAKC,UAAU9D,KAAK+D,iBAAkB,CAACC,KAAM,qBAAsB,CACpFC,SAAUC,IAAWlE,KAAKF,MAAMwD,SAAU,CAACa,YAAa,MAAQ,QAChEC,WAAY,CAAC,a,4KAKIC,YAAS,CAC1BC,UAAW,CAAC,sB,UAGD,QAJPC,E,0DAQAC,EAAS,IAAIC,YACZC,iBAAiB,WAAW,WACjC,IAAMC,EAASd,KAAKe,MAAMJ,EAAOG,QACjC,EAAK1E,SAAS,CACZqD,SAAUqB,EAAOrB,SACjBL,MAAO0B,EAAO1B,MACdO,mBAAoB,IAAIC,IAAIkB,EAAOnB,oBACnCE,aAAc,IAAID,IAAIkB,EAAOjB,mBAGjCc,EAAOK,WAAWN,G,iIAIlB,IADQ,EACJO,EAAU,CACZ,SAAY,IAFN,cAKW9E,KAAKF,MAAMmD,OALtB,IAKR,2BAAqC,CAAC,IAA3B8B,EAA0B,QAC7BC,EAAQ,iBACRC,EAAgBF,EAAK3D,MAAM8D,MAAMF,GACjCG,EAAeJ,EAAKpD,KAAKuD,MAAMF,GAC/BI,GAA8B,OAAlBH,EAAyBA,EAAgB,IAAII,OAAwB,OAAjBF,EAAwBA,EAAe,IAE7G,GAAKC,EAASE,OAAd,CANmC,oBAWbF,GAXa,IAWnC,2BAAgC,CAAC,IAAtBG,EAAqB,QAC1BA,KAAWT,EACbA,EAAQS,GAASC,KAAKT,GAEtBD,EAAQS,GAAW,CAAER,IAfU,oCAOjCD,EAAO,SAAaU,KAAKT,IAZrB,8BAyBR,OAAOU,OAAOC,QAAQZ,GAASa,KAAI,yCAAmB,CACpDC,IADiC,KAEjC3C,MAFiC,W,oCAMtB,IAAD,SACR4C,EAAyB,IAAIpC,IADrB,cAEUzD,KAAK8F,WAFf,IAEZ,2BAAsC,CAAC,IAA5BC,EAA2B,QACpC,GAAI/F,KAAKF,MAAM4D,aAAasC,IAAID,EAAQH,KAAM,CAAC,IAAD,gBAC5BG,EAAQ9C,OADoB,IAC5C,2BAA+B,CAAC,IAArBgD,EAAoB,QAC7BJ,EAAuBK,IAAID,IAFe,iCAHpC,8BAUZ,OAAOjG,KAAKF,MAAMmD,MAAMkD,QAAO,SAAApB,GAAI,OACjCA,EAAKjE,SAAW,EAAKhB,MAAM0D,mBAAmBwC,IAAIjB,EAAK3B,SAASC,aAChE8C,QAAO,SAAApB,GAAI,OACXA,EAAKjE,SAAW+E,EAAuBG,IAAIjB,Q,gCAK7C/E,KAAKC,SAAS,CACZuD,mBAAoB,IAAIC,IAAI,CAC1B,OAAQ,SAAU,SAEpBC,aAAc,IAAID,IAChBzD,KAAK8F,UAAUH,KAAI,SAAAS,GAAC,OAAIA,EAAER,Y,iCAM9B5F,KAAKC,SAAS,CACZuD,mBAAoB,IAAIC,IAAI,IAC5BC,aAAc,IAAID,IAAI,Q,4CAKxB,OAAOzD,KAAKqG,cAAcf,SAAWtF,KAAKF,MAAMmD,MAAMqC,S,mCAG3CP,GAAO,IAAD,OACXuB,EAAYtG,KAAKF,MAAMmD,MAAMsD,WAAU,SAAAlF,GAAC,OAAIA,IAAM0D,KAExD/E,KAAKwG,OAAO,CACV3D,KAAO,kBAAC4D,EAAA,EAAD,qBACP1D,OAAS,kBAAC2D,EAAA,EAAD,CAAQC,MAAM,OAAO/F,QAAS,kBAAM,EAAKX,SAAS,CAAEgD,MAAO,EAAKnD,MAAMmD,MAAM2D,MAAM,EAAGN,GAAWjB,OAAON,GAAMM,OAAO,EAAKvF,MAAMmD,MAAM2D,MAAMN,WAGtJtG,KAAKC,SAAS,CACZgD,MAAOjD,KAAKF,MAAMmD,MAAMkD,QAAO,SAAAF,GAAC,OAAKA,IAAMlB,S,kCAK7C/E,KAAKC,SAAS,CACZgD,MAAOjD,KAAKF,MAAMmD,MAAMoC,OAAO,CAC7BnC,GAAIC,cACJ/B,MAAO,GACPO,KAAM,GACNb,SAAS,EACTsC,SAAU,CACRC,SAAU,c,iCAMP0B,GACT,IAAM9B,EAAQjD,KAAKF,MAAMmD,MAAM0C,KAAI,SAAAM,GAAC,OAAKA,IAAMlB,EAAN,2BAAkBkB,GAAlB,IAAqBnF,SAAUmF,EAAEnF,UAAYmF,KACtFjG,KAAKC,SAAS,CAAEgD,MAAOA,M,wCAGP8B,EAAM1D,GACtB,IAAM4B,EAAQjD,KAAKF,MAAMmD,MAAM0C,KAAI,SAAAM,GAAC,OAAKA,IAAMlB,EAAN,2BAAkBkB,GAAlB,IAAqB7E,MAAOC,EAAEwF,OAAO1F,QAAU8E,KACxFjG,KAAKC,SAAS,CAAEgD,MAAOA,M,uCAGR8B,EAAM1D,GACrB,IAAM4B,EAAQjD,KAAKF,MAAMmD,MAAM0C,KAAI,SAAAM,GAAC,OAAKA,IAAMlB,EAAN,2BAAkBkB,GAAlB,IAAqBtE,KAAMN,EAAEwF,OAAO1F,QAAU8E,KACvFjG,KAAKC,SAAS,CAAEgD,MAAOA,M,wCAGP8B,EAAM1B,GACtB,IAAMyD,EAAa,2BAAQ/B,EAAK3B,UAAb,IAAuBC,SAAUA,IAC9CJ,EAAQjD,KAAKF,MAAMmD,MAAM0C,KAAI,SAAAM,GAAC,OAAKA,IAAMlB,EAAN,2BAAkBkB,GAAlB,IAAqB7C,SAAU0D,IAAkBb,KAC1FjG,KAAKC,SAAS,CAAEgD,MAAOA,M,6BAGlB8D,GACL,IAAMC,EAAkB,CACtB9D,GAAIC,cACJN,KAAMkE,EAAalE,KACnBE,OAAQgE,EAAahE,QAGvB/C,KAAKC,SAAS,CACZsD,cAAevD,KAAKF,MAAMyD,cAAc8B,OAAO2B,O,+BAIzC,IAAD,OACDC,EAAoB,CACxB,KAAQ,eACR,OAAU,iBACV,KAAQ,aAGV,OACE,kBAACC,EAAA,EAAD,CAAS1H,MAAOA,EAAO2H,MAAI,GACzB,kBAACrE,EAAA,EAAD,CAAK7B,MAAI,EAACmG,MAAI,EAAC1E,UAAU,UAEzB,kBAAC2E,EAAA,EAAD,CAAQ3F,UAAU,SAASpB,WAAW,QAAQK,IAAK,CAAE2G,WAAY,SAAUC,SAAU,UACnF,kBAACC,EAAA,EAAD,CAASC,MAAM,IAAIpH,OAAO,QAA1B,UACA,kBAACyC,EAAA,EAAD,CAAKJ,UAAU,MAAMC,IAAI,SACvB,kBAAC+D,EAAA,EAAD,CAAQC,MAAM,OAAO/F,QAAS,kBAAM,EAAK8G,gBACzC,kBAACC,EAAA,EAAD,CAAWxG,MAAOnB,KAAKF,MAAMwD,SAAU9B,SAAU,SAAAH,GAAC,OAAI,EAAKpB,SAAS,CAAEqD,SAAUjC,EAAEwF,OAAO1F,WACzF,kBAACuF,EAAA,EAAD,CAAQC,MAAM,OAAO/F,QAAS,kBAAM,EAAKgH,iBAE3C,kBAAClB,EAAA,EAAD,CAAQmB,SAAO,EAAClB,MAAM,MAAM/F,QAAS,kBAAM,EAAKkH,gBAGlD,kBAAChF,EAAA,EAAD,CAAKsE,KAAM,CAAEW,KAAM,EAAGC,OAAQ,GAAKC,SAAS,OAAOtH,IAAI,SAAS+B,UAAU,MAAMwF,MAAI,EAACC,QAAQ,UAC1FnI,KAAKqG,cAAcV,KAAI,SAAAZ,GAAI,OAAI,kBAAC,EAAD,CAC9BqD,IAAKrD,EAAK7B,GACV9B,MAAO2D,EAAK3D,MACZO,KAAMoD,EAAKpD,KACXb,QAASiE,EAAKjE,QACdW,cAAe,SAACJ,GAAD,OAAO,EAAKgH,kBAAkBtD,EAAM1D,IACnDO,aAAc,SAACP,GAAD,OAAO,EAAKiH,iBAAiBvD,EAAM1D,IACjDQ,OACE,kBAAC0G,EAAA,EAAD,CAAYjI,WAAW,UAAUK,IAAK,CAAE2G,WAAY,SAAW3E,IAAI,WACjE,kBAAC+D,EAAA,EAAD,CAAQ8B,KAAMzD,EAAKjE,QAAU,kBAAC2H,EAAA,EAAD,MAAgB,kBAACC,EAAA,EAAD,MAAUC,gBAAc,EAAC/H,QAAS,SAACS,GAAD,OAAO,EAAKuH,WAAW7D,MACrG,CAAC,OAAQ,SAAU,QAAQY,KAAI,SAAAkD,GAAC,OAAK,kBAACnC,EAAA,EAAD,CACpC0B,IAAKS,EACLL,KAAMzD,EAAK3B,SAASC,WAAawF,EAAI,kBAACC,EAAA,EAAD,CAAgBC,MAAO9B,EAAkB4B,KAAS,kBAACG,EAAA,EAAD,CAAQD,MAAO9B,EAAkB4B,KACxHF,gBAAc,EACd/H,QAAS,kBAAM,EAAKqI,kBAAkBlE,EAAM8D,SAE9C,kBAACnC,EAAA,EAAD,CAAQ8B,KAAM,kBAACU,EAAA,EAAD,MAAWP,gBAAc,EAAC/H,QAAS,kBAAM,EAAKuI,aAAapE,aAMhF/E,KAAKF,MAAMyD,cAAcoC,KAAI,SAAAyD,GAAC,OAAI,kBAAC,EAAD,CACjChB,IAAKgB,EAAElG,GACPL,KAAMuG,EAAEvG,KACRE,OAAQqG,EAAErG,YAGZ,kBAACsG,EAAA,EAAD,CAAQ1I,IAAI,QAAQL,WAAW,UAAUoB,UAAU,UAEjD,kBAAC4H,EAAA,EAAD,CAAOC,OAAO,aACVvJ,KAAKwJ,sBAAwB,kBAAC9C,EAAA,EAAD,CAC7BC,MAAM,OACN/F,QAAS,kBAAM,EAAK6I,YACpBpJ,OAAO,WACJ,kBAACqG,EAAA,EAAD,CACHC,MAAM,MACN/F,QAAS,kBAAM,EAAK8I,WACpBrJ,OAAO,WAET,kBAACyC,EAAA,EAAD,CAAK5C,UAAU,UAAUS,IAAK,CAAE2G,WAAY,UAAYqC,OAAK,EAACjI,UAAU,SACtE,kBAAC+E,EAAA,EAAD,KAAOzG,KAAKF,MAAMmD,MAAMqC,UAI5B,kBAACxC,EAAA,EAAD,CAAKnC,IAAI,UAAU+B,UAAU,MAAMC,IAAI,UAAUsF,SAAS,QAEvD,CAAC,OAAQ,SAAU,QAAQtC,KAAI,SAAAkD,GAAC,OAC/B,kBAACS,EAAA,EAAD,CAAOlB,IAAKS,EAAGU,OAAO,aACpB,kBAAC7C,EAAA,EAAD,CACEmB,QAAS,EAAK/H,MAAM0D,mBAAmBwC,IAAI6C,GAC3ClC,MAAOkC,EACPE,MAAO9B,EAAkB4B,GACzBxI,OAAO,SACPO,QAAS,kBAAM,EAAKX,SAAS,CAC3BuD,mBAAoB,EAAK1D,MAAM0D,mBAAmBwC,IAAI6C,GACpD,IAAIpF,IAAI,YAAI,EAAK3D,MAAM0D,oBAAoB2C,QAAO,SAAAF,GAAC,OAAIA,IAAM4C,MAC3D,IAAIpF,IAAJ,YAAY,EAAK3D,MAAM0D,qBAAqB0C,IAAI2C,QAGxD,kBAAC/F,EAAA,EAAD,CAAK5C,UAAU,UAAUS,IAAK,CAAE2G,WAAY,UAAYqC,OAAK,EAACjI,UAAU,SACtE,kBAAC+E,EAAA,EAAD,KAAO,EAAK3G,MAAMmD,MAAMkD,QAAO,SAAAF,GAAC,OAAIA,EAAE7C,SAASC,WAAawF,KAAGvD,aAKpEtF,KAAK8F,UAAUH,KAAI,SAAAS,GAAC,OAAI,kBAACkD,EAAA,EAAD,CAAOlB,IAAKhC,EAAER,IAAK2D,OAAO,aACjD,kBAAC7C,EAAA,EAAD,CACEC,MAAOP,EAAER,IACTiC,QAAS,EAAK/H,MAAM4D,aAAasC,IAAII,EAAER,KACvCvF,OAAO,SACPO,QAAS,kBAAM,EAAKX,SAAS,CAC3ByD,aAAc,EAAK5D,MAAM4D,aAAasC,IAAII,EAAER,KAC1C,IAAInC,IAAI,YAAI,EAAK3D,MAAM4D,cAAcyC,QAAO,SAAAyD,GAAC,OAAIA,IAAMxD,EAAER,QACvD,IAAInC,IAAJ,YAAY,EAAK3D,MAAM4D,eAAewC,IAAIE,EAAER,UAGpD,kBAAC9C,EAAA,EAAD,CAAK5C,UAAU,UAAUS,IAAK,CAAE2G,WAAY,UAAYqC,OAAK,EAACjI,UAAU,SACtE,kBAAC+E,EAAA,EAAD,KAAOL,EAAEnD,MAAMqC,qB,GA3TbxD,IAAMC,WC7GJ8H,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS9E,MACvB,2DCbN+E,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SD0HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.4f62640a.chunk.js","sourcesContent":["import './App.css';\n\nimport React from 'react';\nimport { Box, Button, Card, CardBody, CardFooter, Footer, Grommet, Header, Heading, Layer, Markdown, Stack, Text, TextArea, TextInput } from 'grommet';\nimport { Checkmark, Edit, Radial, RadialSelected, Trash } from 'grommet-icons';\n\nimport { v4 as uuidv4 } from 'uuid';\nimport { fileOpen, fileSave } from 'browser-nativefs';\nimport filenamify from 'filenamify';\n\nconst theme = {\n  global: {\n    font: {\n      family: 'Raleway',\n    },\n  },\n};\n\nclass Flashcard extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      flipped: false,\n    };\n  }\n  \n  handleFlip() {\n    this.setState({\n      flipped: !this.state.flipped,\n    });\n  }\n\n  render() {\n    return (\n      <div>\n      <div className={'card-flip ' + (this.state.flipped ? 'flipped' : '')}>\n        <div className=\"flip\">\n          <div className=\"front\">\n            <Card border={this.props.border} margin=\"small\" background=\"light-1\" width=\"medium\" height={{ min: 'small' }}>\n              <CardBody pad=\"medium\" onClick={() => this.handleFlip()}>\n                { this.props.editing ? <TextArea \n                    autoFocus={!this.state.flipped}\n                    fill\n                    resize=\"vertical\"\n                    value={this.props.front}\n                    onClick={(e) => e.stopPropagation()}\n                    onKeyDown={(e) => e.stopPropagation()}\n                    onChange={(e) => this.props.onChangeFront(e)}\n                  /> : this.props.front\n                }\n              </CardBody>\n            </Card>\n          </div>\n          <div className=\"back\">\n            <Card border={this.props.border} margin=\"small\" background=\"light-1\" elevation=\"large\" width=\"medium\" height={{ min: 'small' }}>\n              <CardBody pad=\"medium\" onClick={() => this.handleFlip()}>\n                { this.props.editing ? <TextArea \n                    autoFocus={this.state.flipped}\n                    fill\n                    resize=\"vertical\"\n                    value={this.props.back}\n                    onClick={(e) => e.stopPropagation()}\n                    onKeyDown={(e) => e.stopPropagation()}\n                    onChange={(e) => this.props.onChangeBack(e)}\n                  /> : this.props.back\n                }\n              </CardBody>\n              {this.props.footer}\n            </Card>\n          </div>\n        </div>\n      </div>\n      </div>\n    );\n  }\n\n} \n\nclass Toast extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      show: true,\n      timeout: null,\n    };\n  }\n\n  hide() {\n    if (this.state.timeout !== null) {\n      clearTimeout(this.state.timeout);\n    }\n\n    this.setState({\n      show: false,\n      timeout: null,\n    });\n  }\n\n  componentDidMount() {\n    if (this.state.timeout === null) {\n      this.setState({\n        timeout: setTimeout(() => this.hide(), 3000),\n      });\n    }\n  }\n\n  render() {\n    return this.state.show && (\n      <Layer position=\"bottom-left\" margin=\"large\" plain modal={false}>\n        <Card direction=\"row\" pad=\"medium\" gap=\"large\" align=\"baseline\" background=\"dark-3\" elevation=\"large\">\n          {this.props.text}\n          <Box onClick={() => this.hide()}>\n            {this.props.action}\n          </Box>\n        </Card>\n      </Layer>\n    );\n  }\n}\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    const cards = [\n      {\n        id: uuidv4(),\n        front: \"Hey!\",\n        back: \"Nice to meet you!\",\n        editing: false,\n        progress: {\n          category: 'Hard',\n        },\n      },\n      {\n        id: uuidv4(),\n        front: \"This is a little flash cards app. Click cards to flip and edit them.\",\n        back: \"Isn't that neat?\",\n        editing: false,\n        progress: {\n          category: 'Medium',\n        },\n      },\n      {\n        id: uuidv4(),\n        front: \"You can add #tags to cards. Tags will show up at the bottom of the screen.\",\n        back: \"Also, you can track your progress using the three coloured dots below. Go ahead and add your first card!\",\n        editing: false,\n        progress: {\n          category: 'Easy',\n        },\n      },\n    ];\n\n    this.state = {\n      boxTitle: \"Cards\",\n      cards: cards,\n      notifications: [],\n      selectedCategories: new Set([\n        'Easy', 'Medium', 'Hard',\n      ]),\n      selectedTags: new Set([\n        'Untagged', '#tags',\n      ]),\n    };\n  }\n\n  getSaveState() {\n    return ({\n      boxTitle: this.state.boxTitle,\n      cards: this.state.cards,\n      selectedCategories: [...this.state.selectedCategories],\n      selectedTags: [...this.state.selectedTags],\n    });\n  }\n\n  handleSave() {\n    fileSave(new Blob([JSON.stringify(this.getSaveState())], {type: 'application/json'}), {\n      fileName: filenamify(this.state.boxTitle, {replacement: '-'}) + '.json',\n      extensions: ['.json'],\n    });\n  }\n\n  async handleOpen() {\n    const blob = await fileOpen({\n      mimeTypes: ['application/json'],\n    });\n\n    if (blob === null) {\n      return;\n    }\n\n    const reader = new FileReader();\n    reader.addEventListener('loadend', () => {\n      const result = JSON.parse(reader.result);\n      this.setState({\n        boxTitle: result.boxTitle,\n        cards: result.cards,\n        selectedCategories: new Set(result.selectedCategories),\n        selectedTags: new Set(result.selectedTags),\n      });\n    });\n    reader.readAsText(blob);\n  }\n\n  getTags() {\n    let tagsMap = {\n      'Untagged': [],\n    };\n\n    for (const card of this.state.cards) {\n      const tagRE = /#[^#\\s!?.,:]+/g;\n      const cardFrontTags = card.front.match(tagRE);\n      const cardBackTags = card.back.match(tagRE);\n      const cardTags = (cardFrontTags !== null ? cardFrontTags : []).concat(cardBackTags !== null ? cardBackTags : []);\n\n      if (!cardTags.length) {\n        tagsMap['Untagged'].push(card);\n        continue;\n      }\n\n      for (const cardTag of cardTags) {\n        if (cardTag in tagsMap) {\n          tagsMap[cardTag].push(card);\n        } else {\n          tagsMap[cardTag] = [ card, ];\n        }\n      }\n    }\n\n    return Object.entries(tagsMap).map(([tag, cards]) => ({\n      tag: tag,\n      cards: cards,\n    }));\n  }\n\n  filterCards() {\n    let selectedTagsCardsUnion = new Set();\n    for (const tagInfo of this.getTags()) {\n      if (this.state.selectedTags.has(tagInfo.tag)) {\n        for (const c of tagInfo.cards) {\n          selectedTagsCardsUnion.add(c);\n        }\n      }\n    }\n\n    return this.state.cards.filter(card =>\n      card.editing || this.state.selectedCategories.has(card.progress.category)\n    ).filter(card => \n      card.editing || selectedTagsCardsUnion.has(card)\n    );\n  }\n\n  showAll() {\n    this.setState({\n      selectedCategories: new Set([\n        'Hard', 'Medium', 'Easy',\n      ]),\n      selectedTags: new Set(\n        this.getTags().map(t => t.tag)\n      ),\n    });\n  }\n\n  showNone() {\n    this.setState({\n      selectedCategories: new Set([]),\n      selectedTags: new Set([]),\n    })\n  }\n\n  areAllCardsSelected() {\n    return this.filterCards().length === this.state.cards.length;\n  }\n\n  handleDelete(card) {\n    const cardIndex = this.state.cards.findIndex(e => e === card);\n\n    this.notify({\n      text: (<Text>Card deleted</Text>),\n      action: (<Button label=\"Undo\" onClick={() => this.setState({ cards: this.state.cards.slice(0, cardIndex).concat(card).concat(this.state.cards.slice(cardIndex)) })} />),\n    });\n\n    this.setState({\n      cards: this.state.cards.filter(c => (c !== card)),\n    });\n  }\n\n  handleAdd() {\n    this.setState({\n      cards: this.state.cards.concat({\n        id: uuidv4(),\n        front: \"\",\n        back: \"\",\n        editing: true,\n        progress: {\n          category: 'Hard',\n        },\n      }),\n    });\n  }\n\n  handleEdit(card) {\n    const cards = this.state.cards.map(c => (c === card ? { ...c, editing: !c.editing } : c ));\n    this.setState({ cards: cards });\n  }\n\n  handleChangeFront(card, e) {\n    const cards = this.state.cards.map(c => (c === card ? { ...c, front: e.target.value } : c ));\n    this.setState({ cards: cards });\n  }\n\n  handleChangeBack(card, e) {\n    const cards = this.state.cards.map(c => (c === card ? { ...c, back: e.target.value } : c ));\n    this.setState({ cards: cards });\n  }\n\n  handleSetCategory(card, category) {\n    const card_progress = { ...card.progress, category: category };\n    const cards = this.state.cards.map(c => (c === card ? { ...c, progress: card_progress } : c ));\n    this.setState({ cards: cards });\n  }\n\n  notify(notification) {\n    const addNotification = {\n      id: uuidv4(),\n      text: notification.text,\n      action: notification.action,\n    };\n\n    this.setState({\n      notifications: this.state.notifications.concat(addNotification),\n    });\n  }\n\n  render() {\n    const CATEGORY_COLORMAP = {\n      'Hard': 'status-error',\n      'Medium': 'status-warning',\n      'Easy': 'status-ok',\n    };\n\n    return (\n      <Grommet theme={theme} full>\n        <Box fill flex direction=\"column\">\n        \n        <Header elevation=\"medium\" background=\"brand\" pad={{ horizontal: 'medium', vertical: 'small' }}>\n          <Heading level=\"3\" margin=\"none\">#cards</Heading>\n          <Box direction=\"row\" gap=\"small\">\n            <Button label=\"Open\" onClick={() => this.handleOpen()} />\n            <TextInput value={this.state.boxTitle} onChange={e => this.setState({ boxTitle: e.target.value })} />\n            <Button label=\"Save\" onClick={() => this.handleSave()} />\n          </Box>\n          <Button primary label=\"Add\" onClick={() => this.handleAdd()} />\n        </Header>\n\n        <Box flex={{ grow: 1, shrink: 1 }} overflow=\"auto\" pad=\"medium\" direction=\"row\" wrap justify=\"center\">\n          {this.filterCards().map(card => <Flashcard\n            key={card.id}\n            front={card.front}\n            back={card.back}\n            editing={card.editing}\n            onChangeFront={(e) => this.handleChangeFront(card, e)}\n            onChangeBack={(e) => this.handleChangeBack(card, e)}\n            footer={(\n              <CardFooter background=\"light-2\" pad={{ horizontal: 'small' }} gap=\"xxsmall\">\n                <Button icon={card.editing ? <Checkmark /> : <Edit />} hoverIndicator onClick={(e) => this.handleEdit(card) } />\n                {['Hard', 'Medium', 'Easy'].map(d => (<Button\n                  key={d}\n                  icon={card.progress.category === d ? <RadialSelected color={CATEGORY_COLORMAP[d]} /> : <Radial color={CATEGORY_COLORMAP[d]} />}\n                  hoverIndicator\n                  onClick={() => this.handleSetCategory(card, d)}\n                />))}\n                <Button icon={<Trash />} hoverIndicator onClick={() => this.handleDelete(card)} />\n              </CardFooter>\n            )}\n          />)}\n        </Box>\n\n        {this.state.notifications.map(n => <Toast\n          key={n.id}\n          text={n.text}\n          action={n.action}\n        />)}\n\n        <Footer pad=\"small\" background=\"light-3\" elevation=\"medium\">\n          \n          <Stack anchor=\"top-right\">\n            { this.areAllCardsSelected() ? <Button\n              label=\"None\"\n              onClick={() => this.showNone()}\n              margin=\"xsmall\"\n            /> : <Button\n              label=\"All\"\n              onClick={() => this.showAll()}\n              margin=\"xsmall\"\n            />}\n            <Box className=\"blurred\" pad={{ horizontal: 'xsmall' }} round elevation=\"small\">\n              <Text>{this.state.cards.length}</Text>\n            </Box>\n          </Stack>\n\n          <Box pad=\"xxsmall\" direction=\"row\" gap=\"xxsmall\" overflow=\"auto\">\n\n            {['Hard', 'Medium', 'Easy'].map(d => (\n              <Stack key={d} anchor=\"top-right\">\n                <Button\n                  primary={this.state.selectedCategories.has(d)}\n                  label={d}\n                  color={CATEGORY_COLORMAP[d]}\n                  margin=\"xsmall\"\n                  onClick={() => this.setState({ \n                    selectedCategories: this.state.selectedCategories.has(d) ?\n                      new Set([...this.state.selectedCategories].filter(c => c !== d))\n                      : new Set([...this.state.selectedCategories]).add(d),\n                  })}\n                />\n                <Box className=\"blurred\" pad={{ horizontal: 'xsmall' }} round elevation=\"small\">\n                  <Text>{this.state.cards.filter(c => c.progress.category === d).length}</Text>\n                </Box>\n              </Stack>\n            ))}\n\n            {this.getTags().map(t => <Stack key={t.tag} anchor=\"top-right\">\n              <Button\n                label={t.tag}\n                primary={this.state.selectedTags.has(t.tag)}\n                margin=\"xsmall\"\n                onClick={() => this.setState({ \n                  selectedTags: this.state.selectedTags.has(t.tag) ?\n                    new Set([...this.state.selectedTags].filter(s => s !== t.tag))\n                    : new Set([...this.state.selectedTags]).add(t.tag),\n                })}\n              />\n              <Box className=\"blurred\" pad={{ horizontal: 'xsmall' }} round elevation=\"small\">\n                <Text>{t.cards.length}</Text>\n              </Box>\n            </Stack>)}\n\n          </Box>\n        </Footer>\n        </Box>\n      </Grommet>\n    );\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}