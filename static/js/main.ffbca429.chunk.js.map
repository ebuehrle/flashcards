{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["theme","global","font","family","TAG_REGEX","TagHighlighter","this","props","text","split","map","s","match","Box","key","as","style","display","background","round","pad","vertical","horizontal","React","Component","Flashcard","state","flipped","setState","className","Card","border","margin","width","height","min","CardBody","onClick","handleFlip","editing","TextArea","autoFocus","fill","resize","value","front","e","stopPropagation","onKeyDown","onChange","onChangeFront","whiteSpace","fontFamily","elevation","back","onChangeBack","footer","Toast","show","timeout","clearTimeout","setTimeout","hide","Layer","position","plain","modal","direction","gap","align","action","App","cards","id","uuidv4","progress","category","boxTitle","notifications","selectedCategories","Set","selectedTags","fileSave","Blob","JSON","stringify","getSaveState","type","fileName","filenamify","replacement","extensions","fileOpen","mimeTypes","blob","reader","FileReader","addEventListener","result","parse","readAsText","tagsMap","card","cardFrontTags","cardBackTags","cardTags","concat","length","cardTag","push","Object","entries","tag","selectedTagsCardsUnion","getTags","tagInfo","has","c","add","filter","t","filterCards","cardIndex","findIndex","notify","Text","Button","label","slice","target","card_progress","notification","addNotification","CATEGORY_COLORMAP","Grommet","full","flex","Header","Heading","level","handleOpen","TextInput","handleSave","primary","handleAdd","grow","shrink","overflow","wrap","justify","alignContent","handleChangeFront","handleChangeBack","CardFooter","icon","Checkmark","Edit","hoverIndicator","handleEdit","d","RadialSelected","color","Radial","handleSetCategory","Trash","handleDelete","n","Footer","Stack","anchor","areAllCardsSelected","showNone","showAll","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ffbca429.chunk.js","sourcesContent":["import './App.css';\n\nimport React from 'react';\nimport { Box, Button, Card, CardBody, CardFooter, Footer, Grommet, Header, Heading, Layer, Stack, Text, TextArea, TextInput } from 'grommet';\nimport { Checkmark, Edit, Radial, RadialSelected, Trash } from 'grommet-icons';\n\nimport { v4 as uuidv4 } from 'uuid';\nimport { fileOpen, fileSave } from 'browser-nativefs';\nimport filenamify from 'filenamify';\n\nconst theme = {\n  global: {\n    font: {\n      family: 'Raleway',\n    },\n  },\n};\n\nconst TAG_REGEX = /(#[^#\\s!?.,:]+)/g;\n\nclass TagHighlighter extends React.Component {\n  render() {\n    return this.props.text\n      .split(TAG_REGEX)\n      .map(s => s.match(TAG_REGEX) ? <Box\n          key={s}\n          as=\"span\"\n          style={{display:\"inline\"}}\n          background=\"brand\"\n          round\n          pad={{ vertical: \"xxsmall\", horizontal: \"xsmall\" }}\n        >\n          {s}\n        </Box> : s\n      )\n  }\n}\n\nclass Flashcard extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      flipped: false,\n    };\n  }\n  \n  handleFlip() {\n    this.setState({\n      flipped: !this.state.flipped,\n    });\n  }\n\n  render() {\n    return (\n      <div className={'card-flip ' + (this.state.flipped ? 'flipped' : '')}>\n        <div className=\"flip\">\n          <div className=\"front\">\n            <Card border={this.props.border} margin=\"small\" background=\"light-1\" width=\"medium\" height={{ min: 'small' }}>\n              <CardBody pad=\"medium\" onClick={() => this.handleFlip()}>\n                { this.props.editing ? <TextArea \n                  autoFocus={!this.state.flipped}\n                  fill\n                  resize=\"vertical\"\n                  value={this.props.front}\n                  onClick={(e) => e.stopPropagation()}\n                  onKeyDown={(e) => e.stopPropagation()}\n                  onChange={(e) => this.props.onChangeFront(e)}\n                /> : <pre style={{ whiteSpace: \"pre-wrap\", fontFamily: theme.global.font.family }}>\n                  <TagHighlighter text={this.props.front} />\n                </pre> }\n              </CardBody>\n            </Card>\n          </div>\n          <div className=\"back\">\n            <Card border={this.props.border} margin=\"small\" background=\"light-1\" elevation=\"large\" width=\"medium\" height={{ min: 'small' }}>\n              <CardBody pad=\"medium\" onClick={() => this.handleFlip()}>\n                { this.props.editing ? <TextArea \n                  autoFocus={this.state.flipped}\n                  fill\n                  resize=\"vertical\"\n                  value={this.props.back}\n                  onClick={(e) => e.stopPropagation()}\n                  onKeyDown={(e) => e.stopPropagation()}\n                  onChange={(e) => this.props.onChangeBack(e)}\n                /> : <pre style={{ whiteSpace: \"pre-wrap\", fontFamily: theme.global.font.family }}>\n                  <TagHighlighter text={this.props.back} />\n                </pre> }\n              </CardBody>\n              {this.props.footer}\n            </Card>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n} \n\nclass Toast extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      show: true,\n      timeout: null,\n    };\n  }\n\n  hide() {\n    if (this.state.timeout !== null) {\n      clearTimeout(this.state.timeout);\n    }\n\n    this.setState({\n      show: false,\n      timeout: null,\n    });\n  }\n\n  componentDidMount() {\n    if (this.state.timeout === null) {\n      this.setState({\n        timeout: setTimeout(() => this.hide(), 3000),\n      });\n    }\n  }\n\n  render() {\n    return this.state.show && (\n      <Layer position=\"bottom-left\" margin=\"large\" plain modal={false}>\n        <Card direction=\"row\" pad=\"medium\" gap=\"large\" align=\"baseline\" background=\"dark-3\" elevation=\"large\">\n          {this.props.text}\n          <Box onClick={() => this.hide()}>\n            {this.props.action}\n          </Box>\n        </Card>\n      </Layer>\n    );\n  }\n}\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    const cards = [\n      {\n        id: uuidv4(),\n        front: \"Hey!\",\n        back: \"Nice to meet you!\",\n        editing: false,\n        progress: {\n          category: 'Hard',\n        },\n      },\n      {\n        id: uuidv4(),\n        front: \"This is a little flash cards app. Click cards to flip and edit them.\",\n        back: \"Isn't that neat?\",\n        editing: false,\n        progress: {\n          category: 'Medium',\n        },\n      },\n      {\n        id: uuidv4(),\n        front: \"You can add #tags to cards. Tags will show up at the bottom of the screen.\",\n        back: \"Also, you can track your progress using the three coloured dots below. Go ahead and add your first card!\",\n        editing: false,\n        progress: {\n          category: 'Easy',\n        },\n      },\n    ];\n\n    this.state = {\n      boxTitle: \"Cards\",\n      cards: cards,\n      notifications: [],\n      selectedCategories: new Set([\n        'Easy', 'Medium', 'Hard',\n      ]),\n      selectedTags: new Set([\n        'Untagged', '#tags',\n      ]),\n    };\n  }\n\n  getSaveState() {\n    return ({\n      boxTitle: this.state.boxTitle,\n      cards: this.state.cards,\n      selectedCategories: [...this.state.selectedCategories],\n      selectedTags: [...this.state.selectedTags],\n    });\n  }\n\n  handleSave() {\n    fileSave(new Blob([JSON.stringify(this.getSaveState())], {type: 'application/json'}), {\n      fileName: filenamify(this.state.boxTitle, {replacement: '-'}) + '.json',\n      extensions: ['.json'],\n    });\n  }\n\n  async handleOpen() {\n    const blob = await fileOpen({\n      mimeTypes: ['application/json'],\n    });\n\n    if (blob === null) {\n      return;\n    }\n\n    const reader = new FileReader();\n    reader.addEventListener('loadend', () => {\n      const result = JSON.parse(reader.result);\n      this.setState({\n        boxTitle: result.boxTitle,\n        cards: result.cards,\n        selectedCategories: new Set(result.selectedCategories),\n        selectedTags: new Set(result.selectedTags),\n      });\n    });\n    reader.readAsText(blob);\n  }\n\n  getTags() {\n    let tagsMap = {\n      'Untagged': [],\n    };\n\n    for (const card of this.state.cards) {\n      const cardFrontTags = card.front.match(TAG_REGEX);\n      const cardBackTags = card.back.match(TAG_REGEX);\n      const cardTags = (cardFrontTags !== null ? cardFrontTags : []).concat(cardBackTags !== null ? cardBackTags : []);\n\n      if (!cardTags.length) {\n        tagsMap['Untagged'].push(card);\n        continue;\n      }\n\n      for (const cardTag of cardTags) {\n        if (cardTag in tagsMap) {\n          tagsMap[cardTag].push(card);\n        } else {\n          tagsMap[cardTag] = [ card, ];\n        }\n      }\n    }\n\n    return Object.entries(tagsMap).map(([tag, cards]) => ({\n      tag: tag,\n      cards: cards,\n    }));\n  }\n\n  filterCards() {\n    let selectedTagsCardsUnion = new Set();\n    for (const tagInfo of this.getTags()) {\n      if (this.state.selectedTags.has(tagInfo.tag)) {\n        for (const c of tagInfo.cards) {\n          selectedTagsCardsUnion.add(c);\n        }\n      }\n    }\n\n    return this.state.cards.filter(card =>\n      card.editing || this.state.selectedCategories.has(card.progress.category)\n    ).filter(card => \n      card.editing || selectedTagsCardsUnion.has(card)\n    );\n  }\n\n  showAll() {\n    this.setState({\n      selectedCategories: new Set([\n        'Hard', 'Medium', 'Easy',\n      ]),\n      selectedTags: new Set(\n        this.getTags().map(t => t.tag)\n      ),\n    });\n  }\n\n  showNone() {\n    this.setState({\n      selectedCategories: new Set([]),\n      selectedTags: new Set([]),\n    })\n  }\n\n  areAllCardsSelected() {\n    return this.filterCards().length === this.state.cards.length;\n  }\n\n  handleDelete(card) {\n    const cardIndex = this.state.cards.findIndex(e => e === card);\n\n    this.notify({\n      text: (<Text>Card deleted</Text>),\n      action: (<Button label=\"Undo\" onClick={() => this.setState({ cards: this.state.cards.slice(0, cardIndex).concat(card).concat(this.state.cards.slice(cardIndex)) })} />),\n    });\n\n    this.setState({\n      cards: this.state.cards.filter(c => (c !== card)),\n    });\n  }\n\n  handleAdd() {\n    this.setState({\n      cards: this.state.cards.concat({\n        id: uuidv4(),\n        front: \"\",\n        back: \"\",\n        editing: true,\n        progress: {\n          category: 'Hard',\n        },\n      }),\n    });\n  }\n\n  handleEdit(card) {\n    const cards = this.state.cards.map(c => (c === card ? { ...c, editing: !c.editing } : c ));\n    this.setState({ cards: cards });\n  }\n\n  handleChangeFront(card, e) {\n    const cards = this.state.cards.map(c => (c === card ? { ...c, front: e.target.value } : c ));\n    this.setState({ cards: cards });\n  }\n\n  handleChangeBack(card, e) {\n    const cards = this.state.cards.map(c => (c === card ? { ...c, back: e.target.value } : c ));\n    this.setState({ cards: cards });\n  }\n\n  handleSetCategory(card, category) {\n    const card_progress = { ...card.progress, category: category };\n    const cards = this.state.cards.map(c => (c === card ? { ...c, progress: card_progress } : c ));\n    this.setState({ cards: cards });\n  }\n\n  notify(notification) {\n    const addNotification = {\n      id: uuidv4(),\n      text: notification.text,\n      action: notification.action,\n    };\n\n    this.setState({\n      notifications: this.state.notifications.concat(addNotification),\n    });\n  }\n\n  render() {\n    const CATEGORY_COLORMAP = {\n      'Hard': 'status-error',\n      'Medium': 'status-warning',\n      'Easy': 'status-ok',\n    };\n\n    return (\n      <Grommet theme={theme} full>\n        <Box fill flex direction=\"column\">\n        \n        <Header elevation=\"medium\" background=\"brand\" pad={{ horizontal: 'medium', vertical: 'small' }}>\n          <Heading level=\"3\" margin=\"none\">#cards</Heading>\n          <Box direction=\"row\" gap=\"small\">\n            <Button label=\"Open\" onClick={() => this.handleOpen()} />\n            <TextInput value={this.state.boxTitle} onChange={e => this.setState({ boxTitle: e.target.value })} />\n            <Button label=\"Save\" onClick={() => this.handleSave()} />\n          </Box>\n          <Button primary label=\"Add\" onClick={() => this.handleAdd()} />\n        </Header>\n\n        <Box flex={{ grow: 1, shrink: 1 }} overflow=\"auto\" pad=\"medium\" direction=\"row\" wrap justify=\"center\" alignContent=\"start\">\n          {this.filterCards().map(card => <Flashcard\n            key={card.id}\n            front={card.front}\n            back={card.back}\n            editing={card.editing}\n            onChangeFront={(e) => this.handleChangeFront(card, e)}\n            onChangeBack={(e) => this.handleChangeBack(card, e)}\n            footer={(\n              <CardFooter background=\"light-2\" pad={{ horizontal: 'small' }} gap=\"xxsmall\">\n                <Button icon={card.editing ? <Checkmark /> : <Edit />} hoverIndicator onClick={(e) => this.handleEdit(card) } />\n                {['Hard', 'Medium', 'Easy'].map(d => (<Button\n                  key={d}\n                  icon={card.progress.category === d ? <RadialSelected color={CATEGORY_COLORMAP[d]} /> : <Radial color={CATEGORY_COLORMAP[d]} />}\n                  hoverIndicator\n                  onClick={() => this.handleSetCategory(card, d)}\n                />))}\n                <Button icon={<Trash />} hoverIndicator onClick={() => this.handleDelete(card)} />\n              </CardFooter>\n            )}\n          />)}\n        </Box>\n\n        {this.state.notifications.map(n => <Toast\n          key={n.id}\n          text={n.text}\n          action={n.action}\n        />)}\n\n        <Footer pad=\"small\" background=\"light-3\" elevation=\"medium\">\n          \n          <Stack anchor=\"top-right\">\n            { this.areAllCardsSelected() ? <Button\n              label=\"None\"\n              onClick={() => this.showNone()}\n              margin=\"xsmall\"\n            /> : <Button\n              label=\"All\"\n              onClick={() => this.showAll()}\n              margin=\"xsmall\"\n            />}\n            <Box className=\"blurred\" pad={{ horizontal: 'xsmall' }} round elevation=\"small\">\n              <Text>{this.state.cards.length}</Text>\n            </Box>\n          </Stack>\n\n          <Box pad=\"xxsmall\" direction=\"row\" gap=\"xxsmall\" overflow=\"auto\">\n\n            {['Hard', 'Medium', 'Easy'].map(d => (\n              <Stack key={d} anchor=\"top-right\">\n                <Button\n                  primary={this.state.selectedCategories.has(d)}\n                  label={d}\n                  color={CATEGORY_COLORMAP[d]}\n                  margin=\"xsmall\"\n                  onClick={() => this.setState({ \n                    selectedCategories: this.state.selectedCategories.has(d) ?\n                      new Set([...this.state.selectedCategories].filter(c => c !== d))\n                      : new Set([...this.state.selectedCategories]).add(d),\n                  })}\n                />\n                <Box className=\"blurred\" pad={{ horizontal: 'xsmall' }} round elevation=\"small\">\n                  <Text>{this.state.cards.filter(c => c.progress.category === d).length}</Text>\n                </Box>\n              </Stack>\n            ))}\n\n            {this.getTags().map(t => <Stack key={t.tag} anchor=\"top-right\">\n              <Button\n                label={t.tag}\n                primary={this.state.selectedTags.has(t.tag)}\n                margin=\"xsmall\"\n                onClick={() => this.setState({ \n                  selectedTags: this.state.selectedTags.has(t.tag) ?\n                    new Set([...this.state.selectedTags].filter(s => s !== t.tag))\n                    : new Set([...this.state.selectedTags]).add(t.tag),\n                })}\n              />\n              <Box className=\"blurred\" pad={{ horizontal: 'xsmall' }} round elevation=\"small\">\n                <Text>{t.cards.length}</Text>\n              </Box>\n            </Stack>)}\n\n          </Box>\n        </Footer>\n        </Box>\n      </Grommet>\n    );\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}